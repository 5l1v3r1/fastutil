/*		 
 * fastUtil 2.1: Fast & compact specialized utility classes for Java
 *
 * Copyright (C) 2002 Sebastiano Vigna 
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

package it.unimi.dsi.fastUtil;

import java.util.*;

/**  An abstract class facilitating the creation of type-specific {@link Comparator}s.
 *
 * <P>To create a type-specific comparator you need both a method comparing
 * primitive types and a method comparing objects. However, if you have the
 * first one you can just inherit from this class and get for free the second
 * one.
 * 
 * @see Comparator
 */

public abstract class KEY_ABSTRACT_COMPARATOR implements KEY_COMPARATOR {

    public int compare( Object ok1, Object ok2 ) {
	return compare( KEY2TYPE( ok1 ), KEY2TYPE( ok2 ) );
    }

    public abstract int compare( KEY_TYPE k1, KEY_TYPE k2 );
}

// Local Variables:
// mode: java
// End:
