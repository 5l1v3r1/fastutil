/*		 
 * fastUtil 2.0: Fast & compact specialized utility classes for Java
 *
 * Copyright (C) 2002 Sebastiano Vigna 
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

package it.unimi.dsi.fastUtil;

import java.util.*;
import java.util.SortedSet;

/** A collection of fixed type values that contains no duplicate elements; 
 * provides some additional methods that use polymorphism to reduce type juggling,
 * and further guarantees that its iterator will traverse the set in
 * ascending element order.
 *
 * @see SortedSet
 */


public interface SORTEDSET extends SET, SortedSet {

#if ! #keyclass(Object)
    /**
	  * @see SortedSet#subSet(Object,Object)
     */
    SORTEDSET subSet(KEY_TYPE fromElement, KEY_TYPE toElement);

    /**
	  * @see SortedSet#headSet(Object)
     */
    SORTEDSET headSet(KEY_TYPE toElement);

    /**
	  * @see SortedSet#tailSet(Object)
     */
    SORTEDSET tailSet(KEY_TYPE fromElement);

    /**
	  * @see SortedSet#first()
     */
    KEY_TYPE FIRST();

    /**
	  * @see SortedSet#last()
     */
    KEY_TYPE LAST();
#endif 

}


// Local Variables:
// mode: java
// End:
