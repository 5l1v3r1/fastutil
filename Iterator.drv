/**
 *		 
 * Copyright (C) 2002 Sebastiano Vigna 
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2, or (at your option) any
 * later version.
 *	
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *	
 * You should have received a copy of the GNU General Public License along
 * with this program; see the file COPYING.  If not, write to the Free
 * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA.
 *
 * An object that iterates through a collection of primitive types, providing some additional methods
 * that use polymorphism to reduce "type juggling".
 *
 * @author  Sebastiano Vigna
 * @version 1.0, 24/03/01
 * @see Map
 */

package it.unimi.dsi.fastUtil;

import java.util.*;

public interface KEY_ITERATOR_NAME extends Iterator {


    /**
     * @see Iterator#next()
	  */

    KEY_TYPE NEXT_KEY_TYPE_CAP();


}
