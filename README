Welcome to fastUtil 1.3, a set of specialized Java classes that implement
the Map and Set interface of the java.util package.

fastUtil provides a huge collection of specialized map classes generated
starting from a parameterized version; the classes are much more compact
and much faster than the general ones. See the package documentation for
more information.

The compiled code is contained in fastUtil.jar, and should be installed
where you keep Java extensions.

The Java sources are generated using a C preprocessor. The gencsources.sh
script will generate the (fake) C sources from the driver files. They
include the driver code and some #define that customize the environment.
Then, you have to "make" to get the actual Java sources and the jar file
and "make docs" to create the API documentation. Note that you need ant
(http://jakarta.apache.org/ant/). If you remove the definition of NDEBUG
from the gcc options in the Makefile, a main method will be compiled in
each class: it performs a regression test or a speed test on n elements,
when called with arguments "regressionTest n [f]" or "speedTest n [f]",
respectively (the optional argument f is the load factor).

The speed tests try to factor out the time used by the random number
generator; the results are under the label "actual time", and can be
negative because of unavoidable inaccuracies. Note that it is a good idea
to use -Xincgc when running speed test, and take into consideration just
the last outputs (i.e., when the JVM is warmed up).


                                          seba (vigna@acm.org)
