/*		 
 * fastutil: Fast & compact type-specific collections for Java
 *
 * Copyright (C) 2002, 2003 Sebastiano Vigna 
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

package it.unimi.dsi.fastutil;

import it.unimi.dsi.fastutil.booleans.*;
import it.unimi.dsi.fastutil.bytes.*;
import it.unimi.dsi.fastutil.shorts.*;
import it.unimi.dsi.fastutil.chars.*;
import it.unimi.dsi.fastutil.ints.*;
import it.unimi.dsi.fastutil.longs.*;
import it.unimi.dsi.fastutil.floats.*;
import it.unimi.dsi.fastutil.doubles.*;
import it.unimi.dsi.fastutil.objects.*;

import java.util.*;

/** A class providing static methods that do useful things with type-specific collections.
 *
 * @see Collections
 */

public class Collections {

#include "BooleanCollections-Fragment.j"
#include "ByteCollections-Fragment.j"
#include "ShortCollections-Fragment.j"
#include "IntCollections-Fragment.j"
#include "LongCollections-Fragment.j"
#include "CharCollections-Fragment.j"
#include "FloatCollections-Fragment.j"
#include "DoubleCollections-Fragment.j"
#include "ObjectCollections-Fragment.j"

	private static class EmptySortedSet extends AbstractObjectSortedSet implements 
	   BooleanSortedSet, ByteSortedSet, ShortSortedSet, IntSortedSet,
	   LongSortedSet, CharSortedSet, FloatSortedSet, DoubleSortedSet,
	   ObjectSortedSet, ReferenceSet {
		
		private static EmptySortedSet singleton = new EmptySortedSet();
		
		public static EmptySortedSet getInstance() { return singleton; }
		
		private EmptySortedSet() {}

		public boolean add( boolean x ) { throw new UnsupportedOperationException(); }
		public boolean add( byte x ) { throw new UnsupportedOperationException(); }
		public boolean add( short x ) { throw new UnsupportedOperationException(); }
		public boolean add( int x ) { throw new UnsupportedOperationException(); }
		public boolean add( long x ) { throw new UnsupportedOperationException(); }
		public boolean add( char x ) { throw new UnsupportedOperationException(); }
		public boolean add( float x ) { throw new UnsupportedOperationException(); }
		public boolean add( double x ) { throw new UnsupportedOperationException(); }
		
	}
	
	
#ifdef TEST
	
	public static void main( String arg[] ) {
	}
	
#endif
	
}

// Local Variables:
// mode: jde
// tab-width: 4
// End:
