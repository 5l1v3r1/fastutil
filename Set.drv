package it.unimi.dsi.fastUtil;

import java.util.*;


/**
 * A collection of fixed type values that contains no duplicate elements, providing some additional methods
 * that uses polymorphism to reduce "type juggling". 
 *
 * @author  Sebastiano Vigna
 * @version 1.0, 24/03/01
 * @see Set
 * @see Collection
 * @see AbstractSet
 */

public interface SET_NAME extends Set {

#if ! #valueclass(Object)

    // Query Operations

    /**
	  * @see Set#contains(Object)
     */
    boolean contains(KEY_TYPE o);


    /**
	  * @see Set#toArray()
     */
    KEY_TYPE[] TO_KEY_TYPE_CAP_ARRAY();

    /**
	  * @see Set#toArray(Object[])
     */
    KEY_TYPE[] toArray(KEY_TYPE a[]);


    /**
	  * @see Set#add(Object)
     */
    boolean add(KEY_TYPE o);


    /**
	  * @see Set#remove(Object)
     */
    boolean remove(KEY_TYPE o);

#endif

}
